local v = require('pink-as-fox.colors').vscode

return {
    typescriptLabel = { fg = v.vscLightBlue, bg = 'NONE' },
    typescriptExceptions = { fg = v.vscLightBlue, bg = 'NONE' },
    typescriptBraces = { fg = v.vscFront, bg = 'NONE' },
    typescriptEndColons = { fg = v.vscLightBlue, bg = 'NONE' },
    typescriptParens = { fg = v.vscFront, bg = 'NONE' },
    typescriptDocTags = { fg = v.vscBlue, bg = 'NONE' },
    typescriptDocComment = { fg = v.vscBlueGreen, bg = 'NONE' },
    typescriptLogicSymbols = { fg = v.vscLightBlue, bg = 'NONE' },
    typescriptImport = { fg = v.vscPink, bg = 'NONE' },
    typescriptBOM = { fg = v.vscLightBlue, bg = 'NONE' },
    typescriptVariableDeclaration = { fg = v.vscLightBlue, bg = 'NONE' },
    typescriptVariable = { fg = v.vscBlue, bg = 'NONE' },
    typescriptExport = { fg = v.vscPink, bg = 'NONE' },
    typescriptAliasDeclaration = { fg = v.vscBlueGreen, bg = 'NONE' },
    typescriptAliasKeyword = { fg = v.vscBlue, bg = 'NONE' },
    typescriptClassName = { fg = v.vscBlueGreen, bg = 'NONE' },
    typescriptAccessibilityModifier = { fg = v.vscBlue, bg = 'NONE' },
    typescriptOperator = { fg = v.vscBlue, bg = 'NONE' },
    typescriptArrowFunc = { fg = v.vscBlue, bg = 'NONE' },
    typescriptMethodAccessor = { fg = v.vscBlue, bg = 'NONE' },
    typescriptMember = { fg = v.vscYellow, bg = 'NONE' },
    typescriptTypeReference = { fg = v.vscBlueGreen, bg = 'NONE' },
    typescriptTemplateSB = { fg = v.vscYellowOrange, bg = 'NONE' },
    typescriptArrowFuncArg = { fg = v.vscLightBlue, bg = 'NONE' },
    typescriptParamImpl = { fg = v.vscLightBlue, bg = 'NONE' },
    typescriptFuncComma = { fg = v.vscLightBlue, bg = 'NONE' },
    typescriptCastKeyword = { fg = v.vscLightBlue, bg = 'NONE' },
    typescriptCall = { fg = v.vscBlue, bg = 'NONE' },
    typescriptCase = { fg = v.vscLightBlue, bg = 'NONE' },
    typescriptReserved = { fg = v.vscPink, bg = 'NONE' },
    typescriptDefault = { fg = v.vscLightBlue, bg = 'NONE' },
    typescriptDecorator = { fg = v.vscYellow, bg = 'NONE' },
    typescriptPredefinedType = { fg = v.vscBlueGreen, bg = 'NONE' },
    typescriptClassHeritage = { fg = v.vscBlueGreen, bg = 'NONE' },
    typescriptClassExtends = { fg = v.vscBlue, bg = 'NONE' },
    typescriptClassKeyword = { fg = v.vscBlue, bg = 'NONE' },
    typescriptBlock = { fg = v.vscLightBlue, bg = 'NONE' },
    typescriptDOMDocProp = { fg = v.vscLightBlue, bg = 'NONE' },
    typescriptTemplateSubstitution = { fg = v.vscLightBlue, bg = 'NONE' },
    typescriptClassBlock = { fg = v.vscLightBlue, bg = 'NONE' },
    typescriptFuncCallArg = { fg = v.vscLightBlue, bg = 'NONE' },
    typescriptIndexExpr = { fg = v.vscLightBlue, bg = 'NONE' },
    typescriptConditionalParen = { fg = v.vscLightBlue, bg = 'NONE' },
    typescriptArray = { fg = v.vscYellow, bg = 'NONE' },
    typescriptES6SetProp = { fg = v.vscLightBlue, bg = 'NONE' },
    typescriptObjectLiteral = { fg = v.vscLightBlue, bg = 'NONE' },
    typescriptTypeParameter = { fg = v.vscBlueGreen, bg = 'NONE' },
    typescriptEnumKeyword = { fg = v.vscBlue, bg = 'NONE' },
    typescriptEnum = { fg = v.vscBlueGreen, bg = 'NONE' },
    typescriptLoopParen = { fg = v.vscLightBlue, bg = 'NONE' },
    typescriptParenExp = { fg = v.vscLightBlue, bg = 'NONE' },
    typescriptModule = { fg = v.vscLightBlue, bg = 'NONE' },
    typescriptAmbientDeclaration = { fg = v.vscBlue, bg = 'NONE' },
    typescriptFuncTypeArrow = { fg = v.vscBlue, bg = 'NONE' },
    typescriptInterfaceHeritage = { fg = v.vscBlueGreen, bg = 'NONE' },
    typescriptInterfaceName = { fg = v.vscBlueGreen, bg = 'NONE' },
    typescriptInterfaceKeyword = { fg = v.vscBlue, bg = 'NONE' },
    typescriptInterfaceExtends = { fg = v.vscBlue, bg = 'NONE' },
    typescriptGlobal = { fg = v.vscBlueGreen, bg = 'NONE' },
    typescriptAsyncFuncKeyword = { fg = v.vscBlue, bg = 'NONE' },
    typescriptFuncKeyword = { fg = v.vscBlue, bg = 'NONE' },
    typescriptGlobalMethod = { fg = v.vscYellow, bg = 'NONE' },
    typescriptPromiseMethod = { fg = v.vscYellow, bg = 'NONE' },
}

